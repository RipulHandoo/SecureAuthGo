// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: user.sql

package database

import (
	"context"
)

const createUser = `-- name: CreateUser :one
INSERT INTO jwtUSER (Email, Password)
VALUES ($1, $2)
RETURNING email, password
`

type CreateUserParams struct {
	Email    string
	Password string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (Jwtuser, error) {
	row := q.db.QueryRowContext(ctx, createUser, arg.Email, arg.Password)
	var i Jwtuser
	err := row.Scan(&i.Email, &i.Password)
	return i, err
}

const getUserByEmail = `-- name: GetUserByEmail :one
SELECT email, password FROM jwtUSER WHERE Email = $1
`

func (q *Queries) GetUserByEmail(ctx context.Context, email string) (Jwtuser, error) {
	row := q.db.QueryRowContext(ctx, getUserByEmail, email)
	var i Jwtuser
	err := row.Scan(&i.Email, &i.Password)
	return i, err
}
